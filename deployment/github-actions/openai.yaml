name: CI-CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '21'
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
      - name: Run unit tests
        run: mvn test --batch-mode --errors --fail-at-end
      - name: Archive test report
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: target/surefire-reports

  build_docker:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build Docker image
        run: docker build -t myapp:${{ github.sha }} -f docker/Dockerfile .
      - name: Save Docker image
        uses: actions/upload-artifact@v3
        with:
          name: docker-image
          path: image.tar

  docker_scout:
    runs-on: ubuntu-latest
    needs: build_docker
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Download Docker image
        uses: actions/download-artifact@v3
        with:
          name: docker-image
          path: .
      - name: Scan with Docker Scout
        uses: docker/scout-action@v1
        with:
          image: myapp:${{ github.sha }}
      - name: Upload scout report
        uses: actions/upload-artifact@v3
        with:
          name: scout-report
          path: scout-report.json

  snyk_sast:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run Snyk SAST
        uses: snyk/actions/maven@master
        with:
          command: test
          args: --fail-on=all
      - name: Upload SAST report
        uses: actions/upload-artifact@v3
        with:
          name: snyk-sast-report
          path: snyk-report.sarif

  snyk_sca:
    runs-on: ubuntu-latest
    needs: build_docker
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run Snyk SCA
        uses: snyk/actions/docker@master
        with:
          image: myapp:${{ github.sha }}
          args: --sarif-file-output=snyk-sca-report.sarif
      - name: Upload SCA report
        uses: actions/upload-artifact@v3
        with:
          name: snyk-sca-report
          path: snyk-sca-report.sarif

  sonarqube_scan:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '21'
      - name: Run SonarQube analysis
        run: |
          mvn sonar:sonar \
            -Dsonar.projectKey=myapp \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
      - name: Upload SonarQube report
        uses: actions/upload-artifact@v3
        with:
          name: sonarqube-report
          path: sonar-report.json

  trivy_scan:
    runs-on: ubuntu-latest
    needs: build_docker
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Download Docker image
        uses: actions/download-artifact@v3
        with:
          name: docker-image
          path: .
      - name: Scan with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: image
          image-ref: myapp:${{ github.sha }}
      - name: Upload Trivy report
        uses: actions/upload-artifact@v3
        with:
          name: trivy-report
          path: .trivy-reports

  publish_artifacts:
    runs-on: ubuntu-latest
    needs: [test, build_docker, docker_scout, snyk_sast, snyk_sca, sonarqube_scan, trivy_scan]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '21'
      - name: Configure JFrog CLI
        uses: jfrog/setup-jfrog-cli@v2
        with:
          version: latest
      - name: Publish JAR to Artifactory
        run: |
          mvn deploy -DskipTests \
            -DaltDeploymentRepository=artifactory::default::${{ secrets.ARTIFACTORY_URL }}/libs-release-local \
            -Dusername=${{ secrets.ARTIFACTORY_USERNAME }} \
            -Dpassword=${{ secrets.ARTIFACTORY_PASSWORD }}
      - name: Publish Docker image to Artifactory
        run: |
          docker login ${{ secrets.ARTIFACTORY_DOCKER_REGISTRY }} -u ${{ secrets.ARTIFACTORY_USERNAME }} -p ${{ secrets.ARTIFACTORY_PASSWORD }}
          docker tag myapp:${{ github.sha }} ${{ secrets.ARTIFACTORY_DOCKER_REGISTRY }}/myapp:${{ github.sha }}
          docker push ${{ secrets.ARTIFACTORY_DOCKER_REGISTRY }}/myapp:${{ github.sha }}
